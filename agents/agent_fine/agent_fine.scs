agent_fine
 // Множество идентификаторов
 => nrel_main_idtf:
       [агентная scp-программа поиска иллюстраций для заданного объекта] (* <- lang_ru;; *);
       [agent_fine scp-program of finding illustrations for given object] (* <- lang_en;; *);
       <- agent_scp_program;;
 // Указываем, что операция поиска агента является scp-программой
 scp_program -> agent_fine
       (*
 // Множество параметров агентной операции
       -> rrel_params: .agent_fine_params
               (*
               -> rrel_1: rrel_in: _event;;
               -> rrel_2: rrel_in: _input_arc;;
               *);;
 // Множество операторов агентной операции
       -> rrel_operators: .agent_fine_operator_set
               (*
 // Первый исполняемый оператор операции
               -> rrel_init: .agent_fine_operator1A
                       (*
                       <- searchElStr3;;
                       -> rrel_1: rrel_assign: rrel_scp_var: _temp;;
                       -> rrel_2: rrel_fixed: rrel_scp_var: _input_arc;;
                       -> rrel_3: rrel_assign: rrel_scp_var: _question;;

                     => nrel_goto: .agent_fine_operator1B;;
                     *);;
                                                                                  
// Агент будет просыпаться, когда обнаружит наш вопрос.
            -> .agent_fine_operator1B
                   (*
                   <- searchElStr3;;
                   -> rrel_1: rrel_fixed: rrel_scp_const: question_finding_fine;;
                   -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                   -> rrel_3: rrel_fixed: rrel_scp_var: _question;;

                   => nrel_then: .agent_fine_operator1C;;
                   => nrel_else: .agent_fine_operator_return;;
                   *);;

// Найдём параметры операции – их подал на вход сам пользователь
            -> .agent_fine_operator1C
                   (*
                   <- searchElStr3;;
                   -> rrel_1: rrel_fixed: rrel_scp_var: _question;;
                   -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
                   -> rrel_3: rrel_assign: rrel_scp_var: _param;;

                   => nrel_then: .agent_fine_operator1D;;
                   => nrel_else: .agent_fine_operator_return;;
                   *);;
// Сгенерировать узел, в который мы поместим конструкцию ответа
         -> .agent_fine_operator1D
                   (*
                   <- genEl;;
                   -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _answer;;

                    => nrel_goto: .agent_fine_operator2A;;
                   
                    *);;



-> .agent_fine_operator2A
                    (*
                    <- searchElStr5;;
                    -> rrel_1: rrel_fixed: rrel_scp_var: _param;;
                  	  -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var:  _arc_value;;
                	-> rrel_3: rrel_assign: rrel_scp_var: _value;;
            		-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc_value2;;
                    -> rrel_5: rrel_fixed: rrel_scp_const: nrel_warning;;

            => nrel_then: .agent_fine_operator2B;;
                    => nrel_else: .agent_fine_return;;
            *);;

-> .agent_fine_operator2B
                    (*
                    <- searchElStr3;;
                    -> rrel_1: rrel_fixed: rrel_scp_const: concept_fine;;
                    -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var:  _arc_value7;;
                    -> rrel_3: rrel_assign: rrel_scp_var: _param;;


            => nrel_then: .agent_fine_operator3A;;
                    => nrel_else: .agent_fine_operator_return;;
            *);;

-> .agent_fine_operator3A
                    (*
                    <- searchElStr5;;
                    -> rrel_1: rrel_fixed: rrel_scp_var: _param;;
                  	  -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var:  _arc_value3;;
                	-> rrel_3: rrel_assign: rrel_scp_var: _value2;;
            		-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc_value4;;
                    -> rrel_5: rrel_fixed: rrel_scp_const: nrel_money_punishment;;

            => nrel_then: .agent_fine_operator3B;;
                    => nrel_else: .agent_fine_operator_return;;
            *);;



-> .agent_fine_operator3B
                    (*
                    <- searchElStr5;;
                    -> rrel_1: rrel_fixed: rrel_scp_var: _value2;;
                  	  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var:  _arc_value11;;
                	-> rrel_3: rrel_assign: rrel_scp_var: _value11;;
            		-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc_value12;;
                    -> rrel_5: rrel_fixed: rrel_scp_const: rrel_from;;

            => nrel_then: .agent_fine_operator3C;;
                    => nrel_else: .agent_fine_operator_return;;
            *);;

-> .agent_fine_operator3C
                    (*
                    <- searchElStr5;;
                    -> rrel_1: rrel_fixed: rrel_scp_var: _value2;;
                  	  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var:  _arc_value22;;
                	-> rrel_3: rrel_assign: rrel_scp_var: _value21;;
            		-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc_value23;;
                    -> rrel_5: rrel_fixed: rrel_scp_const: rrel_until;;

            => nrel_then: .agent_fine_operator4A;;
                    => nrel_else: .agent_fine_operator_return;;
            *);;



-> .agent_fine_operator4A
                    (*
                    <- searchElStr5;;
                    -> rrel_1: rrel_fixed: rrel_scp_var: _param;;
                  	  -> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var:  _arc_value5;;
                	-> rrel_3: rrel_assign: rrel_scp_var: _value3;;
            		-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc_value6;;
                    -> rrel_5: rrel_fixed: rrel_scp_const: nrel_disablement;;

            => nrel_then: .agent_fine_operator4B;;
                    => nrel_else: .agent_fine_operator_return;;
            *);;

-> .agent_fine_operator4B
                    (*
                    <- searchElStr5;;
                    -> rrel_1: rrel_fixed: rrel_scp_var: _value3;;
                  	  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var:  _arc_value15;;
                	-> rrel_3: rrel_assign: rrel_scp_var: _value31;;
            		-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc_value16;;
                    -> rrel_5: rrel_fixed: rrel_scp_const: rrel_from;;

            => nrel_then: .agent_fine_operator4C;;
                    => nrel_else: .agent_fine_operator_return;;
            *);;

-> .agent_fine_operator4C
                    (*
                    <- searchElStr5;;
                    -> rrel_1: rrel_fixed: rrel_scp_var: _value3;;
                  	  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc_value26;;
                	-> rrel_3: rrel_assign: rrel_scp_var: _value41;;
            		-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc_value27;;
                    -> rrel_5: rrel_fixed: rrel_scp_const: rrel_until;;

            => nrel_then: .agent_fine_operator_answer0;;
                    => nrel_else: .agent_fine_operator_return;;
            *);;

-> .agent_fine_operator_answer0
(*
			<- genElStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _question;;
			-> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
		  	-> rrel_3: rrel_fixed: rrel_scp_var: _answer;;
		  	-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
		  	-> rrel_5: rrel_fixed: rrel_scp_const: nrel_answer;;
=> nrel_goto: .agent_fine_operator_answer2;;
*);;

-> .agent_fine_operator_answer2
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _value;;
=> nrel_goto: .agent_fine_operator_answer3;;
*);;

-> .agent_fine_operator_answer3
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _param;;
=> nrel_goto: .agent_fine_operator_answer4;;
*);;

-> .agent_fine_operator_answer4
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc_value;;
=> nrel_goto: .agent_fine_operator_answer5;;
*);;

-> .agent_fine_operator_answer5
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_const: nrel_warning;;
=> nrel_goto: .agent_fine_operator_answer6;;
*);;

-> .agent_fine_operator_answer6
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc_value2;;
=> nrel_goto: .agent_fine_operator_answer8;;
*);;

-> .agent_fine_operator_answer8
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _value2;;
=> nrel_goto: .agent_fine_operator_answer10;;
*);;


-> .agent_fine_operator_answer10
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc_value3;;
=> nrel_goto: .agent_fine_operator_answer11;;
*);;

-> .agent_fine_operator_answer11
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_const: nrel_money_punishment;;
=> nrel_goto: .agent_fine_operator_answer12;;
*);;

-> .agent_fine_operator_answer12
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc_value4;;
=> nrel_goto: .agent_fine_operator_answer14;;
*);;

-> .agent_fine_operator_answer14
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _value3;;
=> nrel_goto: .agent_fine_operator_answer16;;

*);;

-> .agent_fine_operator_answer16
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc_value5;;
=> nrel_goto: .agent_fine_operator_answer17;;
*);;

-> .agent_fine_operator_answer17
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_const: nrel_disablement;;
=> nrel_goto: .agent_fine_operator_answer18;;
*);;

-> .agent_fine_operator_answer18
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc_value6;;
=> nrel_goto: .agent_fine_operator_answer70;;
*);;

-> .agent_fine_operator_answer70
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_const: concept_fine;;
=> nrel_goto: .agent_fine_operator_answer71;;
*);;

-> .agent_fine_operator_answer71
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc_value7;;
=> nrel_goto: .agent_fine_operator_answer72;;
*);;

-> .agent_fine_operator_answer72
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc_value11;;
=> nrel_goto: .agent_fine_operator_answer73;;
*);;

-> .agent_fine_operator_answer73
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc_value12;;
=> nrel_goto: .agent_fine_operator_answer74;;
*);;

-> .agent_fine_operator_answer74
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _value11;;
=> nrel_goto: .agent_fine_operator_answer75;;
*);;

-> .agent_fine_operator_answer75
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_const: rrel_from;;
=> nrel_goto: .agent_fine_operator_answer76;;
*);;


-> .agent_fine_operator_answer76
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc_value22;;
=> nrel_goto: .agent_fine_operator_answer77;;
*);;

-> .agent_fine_operator_answer77
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc_value23;;
=> nrel_goto: .agent_fine_operator_answer78;;
*);;

-> .agent_fine_operator_answer78
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _value21;;
=> nrel_goto: .agent_fine_operator_answer82;;
*);;

-> .agent_fine_operator_answer82
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_const: rrel_until;;
=> nrel_goto: .agent_fine_operator_answer79;;
*);;

-> .agent_fine_operator_answer79
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc_value15;;
=> nrel_goto: .agent_fine_operator_answer80;;
*);;

-> .agent_fine_operator_answer80
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc_value16;;
=> nrel_goto: .agent_fine_operator_answer81;;
*);;

-> .agent_fine_operator_answer81
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _value31;;
=> nrel_goto: .agent_fine_operator_answer82;;
*);;

-> .agent_fine_operator_answer82
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc_value26;;
=> nrel_goto: .agent_fine_operator_answer83;;
*);;

-> .agent_fine_operator_answer83
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc_value27;;
=> nrel_goto: .agent_fine_operator_answer84;;
*);;

-> .agent_fine_operator_answer84
(*
<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _value41;;
=> nrel_goto: .agent_fine_operator_return;;
*);;

-> .agent_fine_operator_return
                    (*
                    <- return;;
                    *);;
*);;
*);;
